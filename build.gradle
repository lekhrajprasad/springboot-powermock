plugins {
	//id 'org.springframework.boot' version '2.3.0.RELEASE'
	//id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.0"
}

group = 'com.lpras'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

configurations.all {
	//transitive = false
}
test {
	finalizedBy jacocoTestReport // report is always generated after tests run
	
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled true
		html.enabled true
		//xml.destination = file(getBuildDir().toString() + File.separator.toString() + "jacoco" + File.separator.toString() + "coverage.xml")
		csv.enabled false
		//html.destination = file(getBuildDir().toString() + File.separator.toString() + "jacoco" + File.separator.toString() + "html")
	}
}
dependencies {
	/*implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}*/
	//classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
	testImplementation(
			//'org.junit.jupiter:junit-jupiter-api:5.4.2',
			'org.powermock:powermock-api-mockito2:2.0.7',
			'org.powermock:powermock-module-junit4:2.0.7'
	)
	testRuntime(
			'org.junit.jupiter:junit-jupiter-engine:5.6.2', // to run junit 5
			'org.junit.vintage:junit-vintage-engine:5.6.2' // to run junit 3 or 4
	)
	
}

test {
	//enabling junit5 gradle native support
	useJUnitPlatform()
}
sonarqube {
    properties {
        property "sonar.exclusions", "src/test"
		property "sonar.exclusions", "src/test/com/lpras/sb/pmock/simple/UtilsTest.java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
       
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"

		/*property "sonar.host.url", "http://localhost:9000" //dafault also used same
		property "sonar.jdbc.url", "jdbc:h2:tcp://localhost:9092/sonar"
		property "sonar.jdbc.driverClassName",  "org.h2.Driver"
		property "sonar.jdbc.username", "admin"
		property "sonar.jdbc.password", "admin"*/
    }
}